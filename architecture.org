#+PROPERTY: header-args :engine postgresql
#+PROPERTY: header-args :exports code
#+PROPERTY: header-args :tangle yes
TEST CHANGE
* Introduction

** This file
This is the data definition and architecture expressed in POSTGRESQL
for Bootstrap facilitated training events and participant
tracking. This is a literate file written in Orgmode and tangled using
org-babel.

** Bootstrap

Bootstrap develops curriculum and facilitates training for professional
educators and the organizations that support. Bootstrap delivers
pedagogical strategies to participant educators through in-person or
virtual learning sessions. Bootstrap seeks to support teacher from
novice learners until they can confidently implement Bootstrap
curriculum in their classrooms.

** Goals

This data models primary goal is to track and analyze the efficacy
of learning supports. Bootstrap hopes to continually improve the
learning model for professional educators. Support for educators are
successful if the educator feels confident to use Bootstrap curriculum
with their students. Bootstrap further measures success through the
achievement of students who received Bootstrap curriculum.

Many factors affect

Good reasons vs within our control

Implementers vs non-implementers within teachers.

Teachers have a role to their organization that places them in front
of students for the majority of their day.

Administrators have a role to their organization that places them
supporting teachers for the majority of their day.

These relationships to the outside organization are orthogonal to the
relationships to Bootstrap trainings. However, the relationship to the
outside organization affects how the 

This data model seeks to capture the changing roles educators have to their external
organizations and to their students.  and how that affects their relationship
with us.

Things to change about the curriculum.

Things to change about training.

Things to change about on-going support.

Quality assurance 

** Reporting Needs

*** Partners
Reports for partners include
- a teacher level attendance report
- a teacher level proficiency report
- cohort aggregations
- implementation reports
*** Internal analysis
- Interventions over time
- Teacher retention
- Types of facilitation experience vs implementation
- Teaching context vs implementation
  
* Grain

The grain in our data model is the professional educator. We measure
the efficacy of the training experience as it relates to various
factors in the life of a professional educator. We collect reactions
to our trainings and followup for a period of time as the teacher
attempts to bring Bootstrap curriculum into the classroom. Pre and post test
student data stops at the teacher level. We do not track students as
entities or store any individual student  

* The Teacher Journey

Professional educators find themselves in a Bootsrap training from a
variety of pathways. Bootstrap curriculum is freely available on the
internet. Bootstrap has trained teachers across the country for many
years and teachers generally love their experience, hence word of
mouth brings teachers in. Partner organizations build training
contracts for cohorts of teachers for a variety of reasons, which
lead to participants with a range of motivation and contextual
appropriateness.

** The Timespan of a Teacher Journey
How long does a teacher receive support and monitoring? Educators can
attend multiple workshops. Does the clock reset? Do we track cohort
contracts, which may have different time lengths for continued
support? Do we continue to assess teaching confidence and strength of
implementation and offer support as long as the teacher is using
Bootstrap curricula? What is the average or typical journey? Are their
logical subsets that may have different typical journeys?

Analysis of our current implementers will help. We have responses to
the implementation survey. We have attendance at coaching and we have
on-going contact. In the future we hope to have users log into a
website where we can track lesson plan usage and custom pathways.

** Communication Plan
*** First Contact
First contact can be casual or formal. Casual contacts include
requests for information through web forms, posting or emailing
questions, and tags on social media. Formal contacts are typically
enrolled in a workshop; the first they hear from us would be a formal
welcome to a training event with logistic information.

*** Contacts
Contact data allows us to send a message with a general idea of who
the person is. At minimum a first contact is an email address, a first
and last name, a job title, and a what brings you here.
#+begin_src sql
      CREATE TABLE IF NOT EXISTS "contacts" (
	"id" SERIAL PRIMARY KEY,
	
  );
#+end_src
*** Preworkshop Intake Data
Information prior to enrolling in a full training scenario is used to
ensure the training is appropriate for the participant, the
training addresses participant needs, and . So, what do we want or need to know
about our teachers?

We want to know how to contact them. We want to know two email
addresses for each person: their school or organization based address
and a personal or persistent address that would not change if they
left their current position. Teachers may change schools, but they
remain Bootstrap teachers.

We want to know about their training and prior
experience. Professional educators typically hold certification and
licensure. Their state has typically granted and certification and
their municipallity has licensed them to teach in the district. A
teacher could work at an independent school and have no certification
or licensure. A teacher could be instructing classes within their
licensed area or outside of it.

We want to know about the classes they are currently teaching and the
classes they plan to teach next year. We want to know the subject and
grade level of those classes, which may be different for each
class. Hence, we actually want a siimplified class program for each of
our participants.

*** Intake data
**** Teacher program
#+begin_src sql
  -- a class in a teachers program tells us the subject and grade level where the teacher will be interacticng with students
  CREATE TABLE IF NOT EXISTS "classes" (
    "teacher_id"   ,
    "class_id" PRIMARY KEY,
    "class_name"   ,
    "class_subject" SUBJECT,
    "class_gradelevel"   GRADELEVEL,
    "class_start_date"  DATE,
    "class_end_date"    DATE,
    CONSTRAINT "fk_teacher" FOREIGN KEY ("teacher_id") REFERENCES "users" ("user_id")
  );
#+end_src

#+begin_src sql
  CREATE TABLE IF NOT EXISTS "certification" (
    -- tracks the certifications relative to state wide professional educators
    "teacher_id" varchar(255),
    "cert_id"    varchar(255),
    "state_ab"   varchar(2),
    "title"      varchar(255),
    "subject"    varchar(255),
    CONTSTRAINT "fk_teacher" FOREIGN KEY ("teacher_id") REFERENCES "users" ("user_id")
  );

#+end_src
** On-going Support and Monitoring
** The Journey to Master Teacher

* Custom Data Types

I'm still working out which helper collections are ENUMs.

types and which we add to a helper table. My intuition is that there
are short sets that we know already and that aren't likely to change,
such as race, and there are longer sets like the textbooks that might
continue to grow.

** Enrollment Roles
These are the roles with respect to our enrollment relationship. They
answer the question what are you doing as part of this event. This
list could grow as the type and complexity of event planning
changes.

Some rules attached to these roles. For example, perhaps a participant
cannot be enrolled to an event before a facilitator has first been
enrolled.

#+begin_src sql
  CREATE TYPE "enrollment_roles" AS ENUM ('facilitator', 'participant', 'admin', 'master teacher in training' );
#+end_src

** Race and Ethnicity

#+begin_src sql
  CREATE TYPE race AS ENUM ('American Indian or Alaska Native', 'Asian', 'Black or African American', 'Native Hawaiian or Other Pacific Islander', 'White' );

  CREATE TYPE ethnicity AS ENUM ('Hispanic or Latino', 'Not Hispanic or Latino' );
#+end_src

** Gender

#+begin_src sql
  CREATE TYPE gender AS ENUM ('Male', 'Female', 'Transgender', 'None of these');
#+end_src

** License

#+begin_src sql
  CREATE TYPE license AS ENUM ('Math', 'Science', 'Social Studies', 'English', 'Language other than English', 'Elementary General Ed', 'Special Education');

  CREATE TABLE license (
    userID           varchar(255) REFERENCES users (userID),
    license          varchar(255),
    licenseState     varchar(255)
  );

#+end_src

** Organization Types

#+begin_src sql
  CREATE TYPE orgTypes AS ENUM ('Non-profit', 'For-profit', 'School', 'District', 'State Government Office', 'Foundation');
  
#+end_src

** Subjects Taught

#+begin_src sql
  CREATE TYPE subjectsTaught AS ENUM ('AP', 'Algebra', 'Geometry', 'Biology' );

#+end_src

** Grades Taught

#+begin_src sql

  CREATE TYPE "grades_taught" AS ENUM ('1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th', '11th', '12th');

#+end_src

** Event Formats

#+begin_src sql

  CREATE TYPE "event_formats" AS ENUM ('Intensive', 'Distributed', 'One-day', '2-hour' );

#+end_src

** Event Types

#+begin_src sql
  CREATE TYPE eventTypes AS ENUM ('Full PD', 'Intro PD', 'Coaching', 'Academic Year Workshop' );

#+end_src

** Curricula

#+begin_src sql
  CREATE TYPE curricula AS ENUM ('Algebra', 'Data Science', 'Physics', 'Algebra 2', 'Early Math', 'Data Science (CODAP)' );
  
#+end_src


* Core Entity (Primary Dimension) Tables
These tables are descriptive data elements that make up the
relationships in our system. They represent everything we know about
the  people, organizations, and events in our facilitation ecosystem.

** Contacts
Anyone who has interacted with Bootstrap, who ever signed up for an
event, even if they did not attend. Anyone who joined the mailing
list through a web form, reached out directly to Bootstrap staff,
messaged through social media, requested answer keys, or joined Discourse.

#+begin_src sql
  CREATE TABLE contacts (
    ContactID         varchar(255),
    NameFirst         varchar(255),
    NameLast          varchar(255),
    AltNameFirst      varchar(255),
    AltNameLast       varchar(255),
    emailPersonal     varchar(255),
    emailProfessional varchar(255)
  );
  
#+end_src

** Users
All of the individual persons who make up the Bootstrap event
facilitation ecosystem. Users are required to submit a full
personal and professional questionaire.

#+begin_src sql
  CREATE TABLE users (
    userID            varchar(255),
    contactID         varchar(255) REFERENCES contacts (contactID),
    lastName          varchar(255),
    firstName         varchar(255),
    userAddress       varchar(255),
    userCity          varchar(255),
    userState         varchar(255),
    homePhone         varchar(15),
    cellPhone         varchar(15),
    workPhone         varchar(15),
    gender            varchar(255) REFERENCES gender (genderID),
    race              varchar(255) REFERENCES race (raceID)
  );

#+end_src
** Events
Bootstrap facilitates events for professional educators. These
events focus on the conceptual understanding and implementation of
Bootstrap curriculum.

#+begin_src sql
  CREATE TABLE events (
    eventID           varchar(255),
    eventName         varchar(255),
    eventDays         int CONSTRAINT positive_days CHECK (eventDays > 0), --length in days
    eventType         varchar(255) REFERENCES eventTypes (typeID),
    eventFormat       varchar(255) REFERENCES eventFormats (formatID),
  );
  
#+end_src

** Organizations
Bootstrap partners with external organizations to build contracts
for facilitated events. Organizations can be municipal or state
level education districts, non-profits, individual schools, private
individuals, or Bootstrap itself.
- State
- Main Email
- Type

#+begin_src sql
  --Main Tables Users, Organizations, Events
  CREATE TABLE organizations (
    orgID             varchar(255),
    orgAddress        varchar(255),
    orgCity           varchar(255),
    orgState          varchar(255)
  );

#+end_src

** Assessment Instruments

#+begin_src sql
  CREATE TABLE assessments (
    assessmentID      varchar(255)
  );
  
#+end_src

** Feedback Instruments


* Attribute (Derived) Tables
** Locations
** Licenses
** Schools
** Districts
** Roles
** Textbooks

#+begin_src sql
  CREATE TABLE Textbooks (
    textBookID        varchar(255),
    textBookName      varchar(255),
    textBookPublisher varchar(255)
  );

#+end_src

* Relationship Tables

** Internal and external roles

People have different relationships to our facilitated
events. Current roles relative to events are Facilitator,
Participant, Admin, and Master Teacher in Training.

** User-Event Roles (Enrollments)
#+begin_src sql

  --Relationship Tables

  CREATE TABLE enrollments (
    enrollmentID      varchar(255),
    userID            varchar(255) REFERENCES Users (UserID)
  );
#+end_src
** User-Organization Roles (OrgRoles)

#+begin_src sql
  CREATE TABLE orgRoles (
    userID varchar(255) REFERENCES users (UserID),
    orgID  varchar(255) REFERENCES organizations (OrgID),
    roleID varchar(255) REFERENCES roles (RoleID)

  CREATE TABLE Enrollments (
    EnrollmentID      varchar(255),
    UserID            varchar(255) REFERENCES Users (UserID)
  );
#+end_src

** User-Organization Roles (UserOrganizationRoles)

#+begin_src sql
  CREATE TABLE UserOrganizationRoles (
    UserID varchar(255) REFERENCES Users (UserID),
    OrgID  varchar(255) REFERENCES Organizations (OrgID),
    RoleID varchar(255) REFERNCES  Roles (RoleID)

  );
  
#+end_src

** Comments

#+begin_src sql

  CREATE TABLE comments (
    authorUserID      varchar(255),
    regardingUserID   varchar(255),
    commentDate       varchar(255),
    tagUserID         varchar(255),
    commentType       varchar(255)

  );
  
#+end_src

** User-Event-Attendance (Attendance)

#+begin_src sql

  CREATE TABLE attendance (
    serID            varchar(255),
    eventID           varchar(255),
    attendanceDate    Date,
    attendancePeriod  varchar(255),
    attendanceValue   varchar(255)

  );

#+end_src

** Contracts

Organizations and individual create contracts with Bootsrap that lead
to the create

#+begin_src sql
  CREATE TABLE Contracts (
    ContractID varchar(255),
    OrgID      varchar(255) REFERENCES Organizations (OrgID),
    EventID    varchar(255) REFERENCES Events (EventID)
  );
  
#+end_src

** Coaching

Coaching is included in some contracts. The coaching table is a
postive entry table. Users present in the coaching table are
invited to coaching sessions throughout the year. Enrollment in
coaching is for one year and is specific to a curriculum. Usually
you are assigned coaching for the curriculum in which you were
trained in the same calendar year.

#+begin_src sql
  CREATE TABLE Coaching (
    -- Coaching is a postive entry table. A user found in this table has
    -- coaching included in their contract
  );
  
#+end_src

** Assessment Instrument Data

#+begin_src sql

  CREATE TABLE instrumentData (
    instrumentDataID  varchar(255),
    userID            varchar(255) REFERENCES Users (userID),
    submitted         varchar(255) timestamp with time zone,
    instrumentData    text
  );

#+end_src
